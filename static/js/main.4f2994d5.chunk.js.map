{"version":3,"sources":["firebase.js","components/Nav.js","components/Page.js","components/Spinner.js","components/CardPlaceHolder.js","components/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Nav","props","size","React","useContext","ResponsiveContext","themeChecked","onThemeChange","Box","tag","direction","align","justify","width","alignSelf","gap","pad","left","right","vertical","RoutedAnchor","path","icon","Cloud","label","Text","Button","plain","href","target","rel","hover","horizontal","round","background","Favorite","CheckBox","toggle","checked","onChange","Page","children","margin","top","spinning","version","viewBox","height","fill","opacity","d","attributeName","type","from","to","dur","repeatCount","Spinner","CardPlaceHolder","Card","CardBody","ErrorBoundary","state","hasError","this","error","Component","OffensiveTerraformModuleCard","lazy","THEMES","grommet","dark","share","App","useState","themeName","setThemeName","setThemeChecked","data","setData","useEffect","a","db","firestore","collection","get","response","docs","map","doc","fetchData","Grommet","theme","flex","Heading","level","textAlign","Paragraph","RedditShareButton","url","RedditIcon","bgStyle","TwitterShareButton","TwitterIcon","LinkedinShareButton","LinkedinIcon","wrap","offensiveModule","index","key","fallback","role","aria-label","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4f2994d5.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDGR1t04Vea4k_51vqBbqWRMUYLZeJgy8o\",\n  authDomain: \"offensive-terraform.firebaseapp.com\",\n  databaseURL: \"https://offensive-terraform.firebaseio.com\",\n  projectId: \"offensive-terraform\",\n  storageBucket: \"offensive-terraform.appspot.com\",\n  messagingSenderId: \"556600256441\",\n  appId: \"1:556600256441:web:6a17fe02846490f8b87868\",\n  measurementId: \"G-DEWDK2DB9R\",\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  ResponsiveContext,\n  RoutedAnchor,\n  Button,\n  CheckBox,\n} from \"grommet\";\nimport { Cloud, Favorite } from \"grommet-icons\";\n\nconst Nav = (props) => {\n  const size = React.useContext(ResponsiveContext);\n  const { themeChecked, onThemeChange } = props;\n\n  const handleThemeChange = () => {\n    onThemeChange(!themeChecked);\n  };\n\n  return (\n    <Box\n      tag=\"header\"\n      direction=\"row\"\n      align=\"center\"\n      justify=\"between\"\n      width=\"xlarge\"\n      alignSelf=\"center\"\n      gap=\"medium\"\n      pad={{ left: \"medium\", right: \"small\", vertical: \"small\" }}\n      {...props}\n    >\n      <RoutedAnchor\n        path=\"/\"\n        icon={<Cloud size=\"large\" />}\n        label={\n          size !== \"small\" && <Text size=\"xlarge\">Offensive Terraform</Text>\n        }\n      />\n      <Box direction=\"row\" gap=\"small\">\n        <Button\n          plain\n          href=\"https://www.patreon.com/offensiveterraform\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {({ hover }) => (\n            <Box\n              pad={{ vertical: \"small\", horizontal: \"medium\" }}\n              round=\"xlarge\"\n              background={hover ? \"active\" : \"control\"}\n              direction=\"row\"\n              gap=\"small\"\n            >\n              <Favorite />\n              <Text icon> Sponsor</Text>\n            </Box>\n          )}\n        </Button>\n        <CheckBox toggle checked={themeChecked} onChange={handleThemeChange} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport { Box } from \"grommet\";\nimport Nav from \"./Nav\";\n\nconst Page = ({ children, background, themeChecked, onThemeChange }) => (\n  <Box pad=\"large\" background={background}>\n    <Box>\n      <Nav themeChecked={themeChecked} onThemeChange={onThemeChange} />\n      <Box margin={{ top: \"large\" }}>{children}</Box>\n    </Box>\n  </Box>\n);\n\nPage.propTypes = Box.propTypes;\n\nexport default Page;\n","import React from \"react\";\nimport { Box } from \"grommet\";\n\nconst spinning = (\n  <svg\n    version=\"1.1\"\n    viewBox=\"0 0 32 32\"\n    width=\"28px\"\n    height=\"28px\"\n    fill=\"#7D4CDB\"\n  >\n    <path\n      opacity=\".25\"\n      d=\"M16 0 A16 16 0 0 0 16 32 A16 16 0 0 0 16 0 M16 4 A12 12 0 0 1 16 28 A12 12 0 0 1 16 4\"\n    />\n    <path d=\"M16 0 A16 16 0 0 1 32 16 L28 16 A12 12 0 0 0 16 4z\">\n      <animateTransform\n        attributeName=\"transform\"\n        type=\"rotate\"\n        from=\"0 16 16\"\n        to=\"360 16 16\"\n        dur=\"0.8s\"\n        repeatCount=\"indefinite\"\n      />\n    </path>\n  </svg>\n);\n\nexport const Spinner = () => (\n  <Box align=\"center\" justify=\"center\">\n    {spinning}\n  </Box>\n);\n\nexport default Spinner;\n","import React from \"react\";\nimport { Card, CardBody } from \"grommet\";\nimport Spinner from \"./Spinner\";\n\nconst CardPlaceHolder = () => {\n  return (\n    <Card width=\"347px\" height=\"347px\" background=\"light-1\" margin=\"small\">\n      <CardBody align=\"center\" justify=\"center\">\n        <Spinner />\n      </CardBody>\n    </Card>\n  );\n};\n\nexport default CardPlaceHolder;\n","import React, { Component } from \"react\";\nimport { Text } from \"grommet\";\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super();\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <Text>Loading failed! Please reload.</Text>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { lazy, Suspense } from \"react\";\nimport { Box, Grommet, Heading, Paragraph } from \"grommet\";\nimport { grommet, dark } from \"grommet/themes\";\nimport {\n  RedditShareButton,\n  RedditIcon,\n  TwitterShareButton,\n  TwitterIcon,\n  LinkedinShareButton,\n  LinkedinIcon,\n} from \"react-share\";\n\nimport firebase from \"./firebase\";\nimport Page from \"./components/Page\";\nimport CardPlaceHolder from \"./components/CardPlaceHolder\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nconst OffensiveTerraformModuleCard = lazy(() =>\n  import(\"./components/OffensiveTerraformModuleCard\")\n);\n\nconst THEMES = {\n  grommet,\n  dark,\n};\n\nconst share = {\n  url: \"offensive-terraform.github.io\",\n  iconSize: 60,\n  round: true,\n  bgColor: \"#333333\",\n};\n\nfunction App() {\n  const [themeName, setThemeName] = React.useState(\"grommet\");\n  const [themeChecked, setThemeChecked] = React.useState(true);\n  const [data, setData] = React.useState([]);\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const db = firebase.firestore();\n      const response = await db.collection(\"modules\").get();\n      setData(response.docs.map((doc) => doc.data()));\n    };\n    fetchData();\n  }, []);\n\n  const handleThemeChange = (checked) => {\n    if (checked) {\n      setThemeName(\"grommet\");\n    } else {\n      setThemeName(\"dark\");\n    }\n    setThemeChecked(checked);\n  };\n\n  return (\n    <Grommet theme={THEMES[themeName || \"grommet\"]}>\n      <Page themeChecked={themeChecked} onThemeChange={handleThemeChange}>\n        <Box flex align=\"center\" justify=\"center\">\n          <Heading level=\"1\" size=\"large\" textAlign=\"center\" margin=\"none\">\n            Offensive Terraform Modules\n          </Heading>\n          <Paragraph size=\"xxlarge\" textAlign=\"center\">\n            Automated multi step offensive attack modules with Infrastructure as\n            Code(IaC)\n          </Paragraph>\n          <Paragraph>\n            <Box direction=\"row\" gap=\"small\">\n              <RedditShareButton url={share.url}>\n                <RedditIcon\n                  size={share.iconSize}\n                  round={share.round}\n                  bgStyle={{ fill: share.bgColor }}\n                />\n              </RedditShareButton>\n              <TwitterShareButton url={share.url}>\n                <TwitterIcon\n                  size={share.iconSize}\n                  round={share.round}\n                  bgStyle={{ fill: share.bgColor }}\n                />\n              </TwitterShareButton>\n              <LinkedinShareButton url={share.url}>\n                <LinkedinIcon\n                  size={share.iconSize}\n                  round={share.round}\n                  bgStyle={{ fill: share.bgColor }}\n                />\n              </LinkedinShareButton>\n            </Box>\n          </Paragraph>\n        </Box>\n        <Box>\n          <Box flex direction=\"row\" justify=\"center\" wrap={true}>\n            {data.map((offensiveModule, index) => (\n              <ErrorBoundary key={index}>\n                <Suspense fallback={<CardPlaceHolder />} key={index}>\n                  <OffensiveTerraformModuleCard\n                    offensiveModule={offensiveModule}\n                    key={index}\n                  />\n                </Suspense>\n              </ErrorBoundary>\n            ))}\n          </Box>\n        </Box>\n        <Box>\n          <Heading level=\"1\" size=\"large\" textAlign=\"center\">\n            <span role=\"img\" aria-label=\"happy hacking\">\n              🤘\n            </span>\n            Happy Hacking!\n            <span role=\"img\" aria-label=\"happy hacking\">\n              🤩\n            </span>\n          </Heading>\n        </Box>\n      </Page>\n    </Grommet>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}